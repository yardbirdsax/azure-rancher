{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "The name of the Administrator account of the new VM"
      },
      "defaultValue": "gatewayadmin"
    },
    "sshKey": {
      "type": "string",
      "metadata": {
        "description": "SSH public key to install on the virtual machines."
      }
    },
    "virtualNetworkResourceGroupName":{
      "type": "string"
    },
    "virtualNetworkName":{
        "type": "string"
    },
    "subnetName":{
        "type": "string"
    },
    "loadBalancerName":{
        "type": "string",
        "defaultValue": "none"
    },
    "backendPoolName":{
        "type": "string",
        "defaultValue": "none"
    },
    "VMName":{
      "type": "string"
    },
    "recoveryVaultName":{
      "type": "string",
      "metadata": {
        "description":"The name of the recovery vault to use for backup."        
      },
      "defaultValue":"none"
    },
    "availabilitySetName":{
      "type": "string",
      "metadata": {
        "description":"The name of the availability set to put the server in if it is part of a multi-server set."
      },
      "defaultValue": "none"
    },
    "VMSize":{
        "type": "string"
    },
    "dataDiskSize":{
        "type": "int",
        "defaultValue": 64,
        "metadata": {
            "description":"The size of the VM data disks in gigabytes."
        }
    },
    "imageSku":{
        "type": "string",
        "allowedValues": [
            "16.04-LTS",
            "18.04-LTS"
        ],
        "defaultValue": "16.04-LTS"
    },
    "scriptsUrl": {
      "type": "string"
    }
  },
  "variables": {
    "VnetID": "[resourceID(parameters('virtualNetworkResourceGroupName'),'Microsoft.Network/virtualNetworks',parameters('virtualNetworkName'))]",
    "subnetRef": "[concat(variables('VnetID'),'/subnets/',parameters('subnetName'))]",
    "backendPoolId":"[resourceId('Microsoft.Network/loadBalancers/backendAddressPools',parameters('loadBalancerName'),parameters('backendPoolName'))]",
    "backendPool": [
      {
        "id":"[variables('backendPoolId')]"
      }
    ],
    "storageAccountType":"[if(not(equals(parameters('availabilitySetName'),'none')),'Standard_LRS','Premium_LRS')]",
    "imagePublisher": "Canonical",
    "imageOffer": "UbuntuServer",
    "vmNicName":"[concat(parameters('VMName'),'-nic')]",
    "vmDependencies":"[if(not(equals(parameters('availabilitySetName'),'none')),concat(array(variables('vmNicName')),array(parameters('availabilitySetName'))),array(variables('vmNicName')))]",
    "availabilitySet":{
      "id":"[resourceId(resourceGroup().name,'Microsoft.Compute/availabilitySets',parameters('availabilitySetName'))]"
    }
  },
  "resources": [
    {
      "name": "[concat(parameters('VMName'),'-nic')]",
      "type": "Microsoft.Network/networkInterfaces",
      "apiVersion": "2016-03-30",
      "location": "[resourceGroup().location]",
      "properties": {
        "ipConfigurations":[
            {
                "name":"[concat(parameters('VMName'),'-ipconfig')]",
                "properties": {
                "privateIPAllocationMethod": "Dynamic",
                "subnet": {
                    "id": "[variables('subnetRef')]"
                },
                "primary":"true",
                "loadBalancerBackEndAddressPools":"[if(equals('none',parameters('loadBalancerName')),json('null'),variables('backendPool'))]"
                }
            }
        ]
      }
    },
    {
      "name": "[parameters('VMName')]",
      "type": "Microsoft.Compute/virtualMachines",
      "apiVersion": "2018-10-01",
      "location": "[resourceGroup().location]",
      "identity":{
        "type": "SystemAssigned"
      },
      "dependsOn": [
        "[variables('vmNicName')]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('VMSize')]"
        },
        "availabilitySet":"[if(not(equals(parameters('availabilitySetName'),'none')),variables('availabilitySet'),json('null'))]",
        "osProfile": {
          "computerName": "[parameters('VMName')]",
          "adminUsername": "[parameters('adminUsername')]",
          "linuxConfiguration":{
            "ssh":{
                "publicKeys":[
                    {
                        "keyData": "[parameters('sshKey')]",
                        "path": "[concat('/home/',parameters('adminUsername'),'/.ssh/authorized_keys')]"
                    }
                ]
            }
          }
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('imagePublisher')]",
            "offer": "[variables('imageOffer')]",
            "sku": "[parameters('imageSKU')]",
            "version": "latest"
          },
          "osDisk": {
            "name": "[concat(parameters('VMName'),'-osdisk')]",
            "managedDisk":{
              "storageAccountType":"[variables('storageAccountType')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          },
          "dataDisks": [
            {
              "managedDisk":{
                "storageAccountType":"[variables('storageAccountType')]"
              },
              "name": "[concat(parameters('VMName'),'-data-disk1')]",
              "caching": "None",
              "diskSizeGB": "[parameters('dataDiskSize')]",
              "lun": 0,
              "createOption": "Empty"
            }
          ]
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId(resourceGroup().Name,'Microsoft.Network/networkInterfaces',concat(parameters('VMName'),'-nic'))]"
            }
          ]
        }
      },
      "resources": [
        {
          "apiVersion": "2015-06-15",
          "type": "extensions",
          "name": "dockerInstall",
          "location": "[resourceGroup().location]",
          "dependsOn": [
            "[concat('Microsoft.Compute/virtualMachines/', parameters('VMName'))]"
          ],
          "properties": {
            "publisher": "Microsoft.Azure.Extensions",
            "type": "CustomScript",
            "typeHandlerVersion": "2.0",
            "autoUpgradeMinorVersion": true,
            "settings": {
              "fileUris": [
                "[concat(parameters('scriptsUrl'),'/installDocker.sh')]"
              ]
            },
            "protectedSettings": {
              "commandToExecute": "sudo sh installDocker.sh > /var/log/dockerinstall.log &2>1"
            }
          }
        }
      ]
    },
    {
      "name": "[guid(concat('Microsoft.Compute/virtualMachines/', parameters('VMName'), 'vmidentity'))]",
      "type": "Microsoft.Authorization/roleAssignments",
      "dependsOn": [
        "[parameters('VMName')]"
      ],
      "apiVersion": "2017-09-01",
      "properties": {
        "roleDefinitionId": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Authorization/roleDefinitions/', 'b24988ac-6180-42a0-ab88-20f7382dd24c')]",
        "principalId": "[reference(concat('Microsoft.Compute/virtualMachines/', parameters('VMName')), '2017-03-30', 'Full').identity.principalId]"
      }
    },
    {
      "name": "[concat(parameters('recoveryVaultName'), '/Azure', '/iaasvmcontainer;iaasvmcontainerv2;',resourceGroup().name,';',parameters('VMName'), '/vm;iaasvmcontainerv2;', resourceGroup().name,';',parameters('VMName'))]",
      "type": "Microsoft.RecoveryServices/vaults/backupFabrics/protectionContainers/protectedItems",
      "apiVersion": "2016-12-01",
      "location": "[resourceGroup().location]",
      "condition":"[not(equals(parameters('recoveryVaultName'),'none'))]",
      "tags": {},
      "properties": {
        "protectedItemType": "Microsoft.Compute/virtualMachines",
        "sourceResourceId": "[resourceId(subscription().subscriptionId,resourceGroup().name,'Microsoft.Compute/virtualMachines',parameters('VMName'))]",
        "policyId": "[resourceId('Microsoft.RecoveryServices/vaults/backupPolicies',parameters('recoveryVaultName'),'Daily3AM')]"
      },
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachines/',parameters('VMName'))]"
      ]
    }
  ],
  "outputs": {
    "return":{
      "type": "array",
      "value": "[variables('vmDependencies')]"
    }
  }
}