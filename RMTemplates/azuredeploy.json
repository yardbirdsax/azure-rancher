{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "The name of the Administrator account of the new VMs"
      },
      "defaultValue": "azureadmin"
    },
    "sshKey": {
        "type": "string",
        "metadata": {
          "description": "SSH public key to install on the virtual machines."
        }
    },
    "virtualNetworkResourceGroupName":{
      "type": "string",
      "metadata": {
        "description": "The name of the resource group where the virtual network resides."
      }
    },
    "virtualNetworkName":{
        "type": "string"
    },
    "subnetName":{
        "type": "string"
    },
    "loadBalancerName":{
        "type": "string",
        "defaultValue": "none"
    },
    "backendPoolName":{
        "type": "string",
        "defaultValue": "none"
    },
    "recoveryVaultName":{
      "type": "string",
      "metadata": {
        "description":"The name of the recovery vault to use for backup."        
      },
      "defaultValue":"none"
    },
    "serverCount":{
      "type": "int",
      "metadata": {
        "description":"The number of web servers to create. Should be an odd number and more than 1, except for testing purposes."
      },
      "defaultValue": 3
    },
    "virtualMachineName":{
      "type": "string",
      "metadata": {
          "description":"The first part of the virtual machine name. Full names will use this plus a numerical incrementing identifier based on the number of VMs to provision."
      }
    },
    "branchName":{
        "type": "string",
        "defaultValue": "master",
        "metadata": {
          "description":"The name of the GitHub branch to use when retrieving resources for the deployment. Should be left as 'master' except for testing purposes."
        }
    },
    "gitHubUserName":{
        "type": "string",
        "defaultValue": "yardbirdsax",
        "metadata": {
          "description":"The user name of the GitHub repository to use when retrieving resources for the deployment. Should be left as the default except for testing purposes or if you are using a forked version of the repository."
        }
    },
    "dataDiskSize":{
        "type": "int",
        "defaultValue": 64,
        "metadata": {
            "description":"The size of the VM data disks in gigabytes."
        }
    },
    "VMSize":{
      "type": "string",
      "defaultValue": "Standard_D2S_V3"
    },
    "includeJumpBox":{
      "type": "string",
      "defaultValue": "no",
      "metadata": {
        "description":"If set to 'yes', then a jump box VM will be deployed in the same subnet for SSH access. By default, this is set to 'no', and should be left that way unless you have no other means of accessing the VMs (such as a VPN client). Note: you must ensure that appropriate NSG rules are put in place to allow connections from allowed IP ranges."
      }
    }
  },
  "variables": {
    "templateUrl": "[concat('https://raw.githubusercontent.com/',parameters('gitHubUserName'),'/azure-rancher/',parameters('branchName'),'/RMTemplates/')]",
    "scriptsUrl": "[concat('https://raw.githubusercontent.com/',parameters('gitHubUserName'),'/azure-rancher/',parameters('branchName'),'/Scripts/')]",
    "availabilitySetName":"[concat(parameters('virtualMachineName'),'KUBE-AS')]",
    "publicLoadBalancerName":"[concat('LB-',resourceGroup().name,'-Public')]",
    "publicIPAddressName":"[concat(resourceGroup().name,'-PublicIP')]"
  },
  "resources": [
    {
      "name": "[concat(parameters('virtualMachineName'),'JUMP')]",
      "type": "Microsoft.Resources/deployments",
      "condition":"[equals('yes',parameters('includeJumpBox'))]",
      "apiVersion": "2016-06-01",
      "dependsOn": [],
      "properties": {
        "templateLink":{
          "uri":"[concat(variables('templateURL'),'LinuxServer.template.json')]"
        },
        "mode":"Incremental",
        "parameters":{
          "adminUserName":{
            "value":"[parameters('adminUsername')]"
          },
          "sshKey":{
            "value":"[parameters('sshKey')]"
          },
          "virtualNetworkResourceGroupName":{
            "value":"[parameters('virtualNetworkResourceGroupName')]"
          },
          "virtualNetworkName":{
            "value":"[parameters('virtualNetworkName')]"
          },
          "subnetName":{
            "value":"[parameters('subnetName')]"
          },
          "recoveryVaultName":{
            "value":"[parameters('recoveryVaultName')]"
          },
          "VMName":{
            "value":"[concat(parameters('virtualMachineName'),'JUMP')]"
          },
          "dataDiskSize":{
              "value":32
          },
          "VMSize":{
            "value":"Standard_B2ms"
          },
          "scriptsUrl":{
            "value":"[variables('scriptsUrl')]"
          }
        }
      }
    },
    {
      "name": "[variables('availabilitySetName')]",
      "condition":"[greater(parameters('serverCount'),1)]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2016-06-01",
      "properties": {
        "templateLink":{
          "uri":"[concat(variables('templateURL'),'availabilitySet.template.json')]"
        },
        "mode":"Incremental",
        "parameters":{
          "availabilitySetName":{
            "value":"[variables('availabilitySetName')]"
          }
        }
      }
    },
    {
      "name": "[parameters('loadBalancerName')]",
      "condition":"[not(equals('none',parameters('loadBalancerName')))]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2016-06-01",
      "properties": {
        "templateLink":{
          "uri":"[concat(variables('templateURL'),'LoadBalancer.template.json')]"
        },
        "mode":"Incremental",
        "parameters":{
          "loadBalancerName":{
            "value":"[parameters('loadBalancerName')]"
          },
          "virtualNetworkResourceGroupName":{
            "value":"[parameters('virtualNetworkResourceGroupName')]"
          },
          "virtualNetworkName":{
              "value":"[parameters('virtualNetworkName')]"
          },
          "subnetName":{
              "value":"[parameters('subnetName')]"
          }
        }
      }
    },
    {
      "name": "[variables('publicIPAddressName')]",
      "type": "Microsoft.Network/publicIPAddresses",
      "apiVersion": "2018-11-01",
      "location": "[resourceGroup().location]",
      "tags": {},
      "sku": {
        "name": "Basic"
      },
      "properties": {
        "publicIPAllocationMethod": "Static",
        "publicIPAddressVersion": "IPv4"
      }
    },
    {
      "name": "[variables('publicLoadBalancerName')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2016-06-01",
      "dependsOn": [
        "[variables('publicIPAddressName')]"
      ],
      "properties": {
        "templateLink":{
          "uri":"[concat(variables('templateURL'),'LoadBalancerPublic.template.json')]"
        },
        "mode":"Incremental",
        "parameters":{
          "loadBalancerName":{
            "value":"[variables('publicLoadBalancerName')]"
          },
          "publicIPAddressName":{
            "value":"[variables('publicIPAddressName')]"
          }
        }
      }
    },
    {
      "name": "[concat(parameters('virtualMachineName'),if(less(copyIndex(),10),concat('0',add(copyIndex(),1)),add(copyIndex(),1)))]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2016-06-01",
      "copy": {
        "count":"[parameters('serverCount')]",
        "name": "WebServerCopy"
      },
      "dependsOn": [
        "[variables('availabilitySetName')]",
        "[parameters('loadBalancerName')]",
        "[variables('publicLoadBalancerName')]"
      ],
      "properties": {
        "templateLink":{
          "uri":"[concat(variables('templateURL'),'LinuxServer.template.json')]"
        },
        "mode":"Incremental",
        "parameters":{
          "adminUserName":{
            "value":"[parameters('adminUsername')]"
          },
          "sshKey":{
            "value":"[parameters('sshKey')]"
          },
          "virtualNetworkResourceGroupName":{
            "value":"[parameters('virtualNetworkResourceGroupName')]"
          },
          "virtualNetworkName":{
            "value":"[parameters('virtualNetworkName')]"
          },
          "subnetName":{
            "value":"[parameters('subnetName')]"
          },
          "loadBalancerName":{
            "value":"[parameters('loadBalancerName')]"
          },
          "backendPoolName":{
            "value":"[parameters('backendPoolName')]"
          },
          "recoveryVaultName":{
            "value":"[parameters('recoveryVaultName')]"
          },
          "publicLoadBalancerName":{
            "value":"[variables('publicLoadBalancerName')]"
          },
          "VMName":{
            "value":"[concat(parameters('virtualMachineName'),if(less(copyIndex(),10),concat('0',add(copyIndex(),1)),add(copyIndex(),1)))]"
          },
          "availabilitySetName":{
            "value":"[if(greater(parameters('serverCount'),1),variables('availabilitySetName'),'none')]"
          },
          "dataDiskSize":{
              "value":"[parameters('dataDiskSize')]"
          },
          "VMSize":{
            "value":"[parameters('VMSize')]"
          },
          "scriptsUrl":{
            "value":"[variables('scriptsUrl')]"
          }
        }
      }
    }    
  ],
  "outputs": {
    "return":{
      "type": "array",
      "value": [
        {
          "PublicIP":"[reference(concat(resourceGroup().name,'-PublicIP'),'2018-11-01','Full').properties.ipAddress]"
        }
      ]
    }
  }
}